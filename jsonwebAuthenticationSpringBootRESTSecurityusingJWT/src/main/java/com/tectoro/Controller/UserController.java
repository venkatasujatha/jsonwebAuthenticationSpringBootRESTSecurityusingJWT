package com.tectoro.Controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapProperties.Credential;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.tectoro.JwtUtil;
import com.tectoro.Model.User;
import com.tectoro.Model.UserRequest;
import com.tectoro.Model.UserResponse;
import com.tectoro.Service.UserService;
import com.tectoro.Service.UserServiceImpl;

@RestController
public class UserController {
	
	@Autowired
	private UserService impl;
	
	@Autowired
	private JwtUtil util;
	@Autowired
	private AuthenticationManager authenticationManager;
	
	//1.save user data into database
	@PostMapping("/saved")
	public ResponseEntity<String> saveUser(@RequestBody User user)
	{
		User i = impl.saveUser(user);
//		System.out.println(user.getId());
		String b="user '"+i+"' saved";
		return ResponseEntity.ok(b);
		
				
	}
	//2.validate user and generate token(login)
	@PostMapping("login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest) throws AuthenticationException
	{
		//validate username/password with database
		authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(userRequest.getUsername(),userRequest.getPassword()));
		String token1 = util.generateToken(userRequest.getUsername());
		return ResponseEntity.ok(new UserResponse(token1,"success ! generated by sujatha"));
	}
	
	//3.after login only
	@PostMapping("/welcome")
	public ResponseEntity<String> accessData(Principal p){
		return ResponseEntity.ok("hello user"+p.getName());
	}
}
